version: '3'

dotenv: ['.env']

tasks:
  install:
    cmds:
      - docker run --name postgres_course -p 5432:5432 -e POSTGRES_PASSWORD=$PG_PASS -d postgres
  tune:
    cmds:
      - docker cp settings.sql  postgres_course:/
      - docker exec -it postgres_course  sh -c "psql -U postgres < settings.sql"
      - docker restart postgres_course
  thai:copy:
    cmds:
      - docker cp $DUMP_PATH postgres_course:/
  thai:install:
    cmds:
      - docker exec -it postgres_course  sh -c "psql -U postgres < thai.sql"
  replicas:up:
    cmds:
      - docker compose up
  replicas:install:schema:
    deps: [ replicas:master:install:schema, replicas:replica:one:install:schema ]
  replicas:create:pubsub:
    cmds:
      - docker compose exec -it master  sh -c 'psql -U postgres -c "CREATE DATABASE thai"'
      - docker compose exec -it master  sh -c 'psql -U postgres -c "ALTER SYSTEM SET wal_level = logical"'
      - docker compose cp settings.sql  master:/
      - docker compose exec -it master  sh -c "psql -U postgres < settings.sql"
      - docker compose restart master
      - docker compose exec -it master  sh -c 'psql -U postgres -d thai -c "CREATE PUBLICATION thai_pub FOR ALL TABLES"'
      - docker compose exec -it replica_1  sh -c 'psql -U postgres -c "CREATE DATABASE thai"'
      - docker compose exec -it replica_1 sh -c 'psql -U postgres -c "ALTER SYSTEM SET wal_level = logical"'
      - docker compose cp settings.sql  replica_1:/
      - docker compose exec -it replica_1  sh -c "psql -U postgres < settings.sql"
      - docker compose restart replica_1
      - docker compose cp $BACKUP_PATH  replica_1:/thaidump
      - docker compose exec -it replica_1  sh -c "pg_restore -U postgres -s -v -F d -j 4 -d thai thaidump"
      - docker compose exec -it replica_1 sh -c "psql -U postgres -d thai -c \"CREATE SUBSCRIPTION thai_sub CONNECTION 'host=master port=5432 user=postgres dbname=thai' PUBLICATION thai_pub\""
  replicas:master:install:
    cmds:
      - docker compose cp $BACKUP_PATH  master:/thaidump
      - docker compose exec -it master  sh -c "pg_restore -U postgres -F d -j 4 -d thai thaidump"
      - docker compose exec -it master  sh -c "rm -rf  thaidump"
  replicas:down:
    cmds:
      - docker compose down -v
  replicas:master:bench:
    cmds:
      - docker compose exec -it master  sh -c 'psql -U postgres -c "CREATE DATABASE thai"'
      - docker compose cp settings.sql  master:/
      - docker compose exec -it master  sh -c "psql -U postgres < settings.sql"
      - docker compose restart master
      - task: replicas:master:install
      - docker compose cp scripts/write_load.sql  master:/write_load.sql
      - docker compose cp scripts/read_load.sql  master:/read_load.sql
      - task: replicas:master:bench:run:init
      - task: replicas:master:bench:run
  replicas:master:bench:run:init:
    cmds:
      - time docker compose exec -it master sh -c "pgbench -i -U postgres -p 5432 thai"
  replicas:master:bench:run:
    cmds:
      - time docker compose exec -it master sh -c "pgbench -c 8 -j 4 -T 60 -n -U postgres -p 5432 thai"
      - time docker compose exec -it master sh -c "pgbench -c 8 -j 4 -T 60 -f ./write_load.sql -n -U postgres -p 5432 thai"
      - time docker compose exec -it master sh -c "pgbench -c 8 -j 4 -T 60 -f ./read_load.sql -n -U postgres -p 5432 thai"
  replicas:streaming:master:setup:
    cmds:
      - docker compose exec -it master  sh -c 'psql -U postgres -c "ALTER SYSTEM SET wal_level = replica"'
      - docker compose exec -it master  sh -c 'psql -U postgres -c "ALTER SYSTEM SET hot_standby = on"'
      - docker compose exec -it master  sh -c 'psql -U postgres -c "ALTER SYSTEM SET synchronous_commit = off"'
      - docker compose exec -it master  sh -c 'psql -U postgres -c "ALTER SYSTEM SET hot_standby_feedback = on"'
      - docker compose exec -it master  sh -c 'psql -U postgres -c "CREATE DATABASE thai"'
      - docker compose exec -it master  sh -c "psql -U postgres -c \"CREATE USER replicator WITH REPLICATION ENCRYPTED PASSWORD 'my_replicator_password'\""
      - docker compose exec -it master  sh -c "psql -U postgres -c \"SELECT * FROM pg_create_physical_replication_slot('replication_slot_slave2')\""
      - docker compose cp settings.sql  master:/
      - docker compose exec -it master  sh -c "psql -U postgres < settings.sql"
      - docker compose restart master
      - docker compose exec -it master  sh -c "pg_basebackup -D /tmp/postgresslave -S replication_slot_slave2 -X stream -P -U repl -Fp -R"
      - task: replicas:master:install
  replicas:replica:one:setup:
    cmds:
      - docker compose cp settings.sql  replica_1:/
      - docker compose exec -it replica_1  sh -c "psql -U postgres < settings.sql"
      - docker compose restart replica_1
      - docker compose exec -it replica_1  sh -c "pg_basebackup -h localhost -p 5432 -U repl -D /var/lib/postgresql/17/main/ -Fp -Xs -R"
  replicas:streaming:bench:
    cmds:
      - task: replicas:streaming:master:setup
      - task: replicas:replica:one:setup
      - task: replicas:master:bench:run:init
      - task: replicas:master:bench:run


